##  snakemake -np results/aligned_2020-05-25_06-49_ourBatch1.fasta
##  snakemake -np auspice/covid19uae_2020-05-25_06-49NR.json
##  latest: spec 2020-06-25_15-15
##  snakemake -np auspice/covid19uae_2020-06-25_15-15.json
rule all:
    input:
        auspice_json = "../auspice/covid19uae_{spec}.json"

#input_fasta = "../data/sequences_2020-05-25_06-49_ourBatch1.fasta"

input_fasta = "../data/sequences_{wildcards.spec}.fasta",
input_align = "../results/aligned_{wildcards.spec}.fasta",
input_tree = "../results/tree_raw_{wildcards.spec}.nwk",
#metadata = "../data/metadata_{spec}.tsv",
#metadata = "../data/metadata_2020-05-25_06-49_ourBatch1.tsv"
reference = "../config/reference.gb",
latlong = "../data/lat_longsAD.tsv",
nthreads = 60,
colors = "../config/color_schemes.tsv",
auspice_config = "../config/auspice_config.json",
#input_metadata = "../data/metadata_2020-05-25_06-49.tsv"
input_metadata = "../data/metadata_2020-06-25_b1-3QC.tsv"


rule refine:
    message:
        """
        Refining tree
          - estimate timetree
          - use {params.coalescent} coalescent timescale
          - estimate {params.date_inference} node dates
        """
    input:
        tree = input_tree,
        alignment = input_align,
        metadata = input_metadata
    output:
        tree = "../results/tree_{spec}.nwk",
        node_data = "../results/branch_lengths_{spec}.json"
    params:
        coalescent = "opt",
        date_inference = "marginal",
        root = "MN908947"
    shell:
        """
        augur refine \
            --tree {input.tree} \
            --alignment {input.alignment} \
            --metadata {input.metadata} \
            --root {params.root} \
            --output-tree {output.tree} \
            --output-node-data {output.node_data} \
            --timetree \
            --date-confidence \
            --coalescent {params.coalescent}
        """

rule ancestral:
    message: "Reconstructing ancestral sequences and mutations"
    input:
        tree = rules.refine.output.tree,
        alignment = input_align
    output:
        node_data = "../results/nt_muts_{spec}.json"
    params:
        inference = "joint"
    shell:
        """
        augur ancestral \
            --tree {input.tree} \
            --alignment {input.alignment} \
            --output-node-data {output.node_data} \
            --inference {params.inference}
        """

rule translate:
    message: "Translating amino acid sequences"
    input:
        tree = rules.refine.output.tree,
        node_data = rules.ancestral.output.node_data,
        reference = reference
    output:
        node_data = "../results/aa_muts_{spec}.json"
    shell:
        """
        augur translate \
            --tree {input.tree} \
            --ancestral-sequences {input.node_data} \
            --reference-sequence {input.reference} \
            --output-node-data {output.node_data} \
        """

rule traits:
    message: "Inferring ancestral traits for {params.columns!s}"
    input:
        tree = rules.refine.output.tree,
        metadata = input_metadata
    output:
        node_data = "../results/traits_{spec}.json",
    params:
        columns = "region country"
    shell:
        """
        augur traits \
            --tree {input.tree} \
            --metadata {input.metadata} \
            --output-node-data {output.node_data} \
            --columns {params.columns} \
            --confidence
        """

rule export:
    message: "Exporting data files for for auspice"
    input:
        tree = rules.refine.output.tree,
        metadata = input_metadata,
        branch_lengths = rules.refine.output.node_data,
        traits = rules.traits.output.node_data,
        nt_muts = rules.ancestral.output.node_data,
        aa_muts = rules.translate.output.node_data,
        colors = colors,
        lat_longs = latlong,
        auspice_config = auspice_config
    output:
        auspice_json = rules.all.input.auspice_json,
    shell:
        """
        augur export v2 \
            --tree {input.tree} \
            --metadata {input.metadata} \
            --node-data {input.branch_lengths} {input.traits} {input.nt_muts} {input.aa_muts} \
            --colors {input.colors} \
            --lat-longs {input.lat_longs} \
            --auspice-config {input.auspice_config} \
            --output {output.auspice_json}
        """
